generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  surname  String
  login    String
  password String
  uuid     String
  chats    Chats[]

  @@map("users")
}

model Chats {
  id             Int       @id @default(autoincrement())
  roomName       String
  description    String?
  adminId        Int
  uuid           String
  userId         Int
  joinedUsersIds String[]
  messages       Message[]
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("chats")
}

model Message {
  id       Int    @id @default(autoincrement())
  chatId   Int
  userId   Int
  text     String
  sendTime String
  sendDate String
  username String
  uuid     String
  file     String
  chat     Chats  @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@map("message")
}

model Analise {
  id         Int @id @default(autoincrement())
  fileLength Int
  textLength Int

  @@map("analise")
}

model MessagesOfMounth {
  id         Int                  @id @default(autoincrement())
  mounthName String
  messages   AnaliseUserMessage[]

  @@map("messagesOfMounth")
}

model AnaliseUserMessage {
  id                   Int              @id @default(autoincrement())
  username             String
  fileLength           Int
  textLength           Int
  analiseUserMessageId Int
  messagesOfMounth     MessagesOfMounth @relation(fields: [analiseUserMessageId], references: [id], onDelete: Cascade)

  @@map("analiseUserMessage")
}
